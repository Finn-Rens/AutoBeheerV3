#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoBeheerV3.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AutoBeheer")]
	public partial class AutoBeheerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAuto(Auto instance);
    partial void UpdateAuto(Auto instance);
    partial void DeleteAuto(Auto instance);
    partial void InsertEigenaar(Eigenaar instance);
    partial void UpdateEigenaar(Eigenaar instance);
    partial void DeleteEigenaar(Eigenaar instance);
    partial void InsertGebruiker(Gebruiker instance);
    partial void UpdateGebruiker(Gebruiker instance);
    partial void DeleteGebruiker(Gebruiker instance);
    #endregion
		
		public AutoBeheerDataContext() : 
				base(global::AutoBeheerV3.Properties.Settings.Default.AutoBeheerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AutoBeheerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoBeheerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoBeheerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoBeheerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Auto> Autos
		{
			get
			{
				return this.GetTable<Auto>();
			}
		}
		
		public System.Data.Linq.Table<Eigenaar> Eigenaars
		{
			get
			{
				return this.GetTable<Eigenaar>();
			}
		}
		
		public System.Data.Linq.Table<Gebruiker> Gebruikers
		{
			get
			{
				return this.GetTable<Gebruiker>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auto")]
	public partial class Auto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Kenteken;
		
		private decimal _Prijs;
		
		private string _Merk;
		
		private System.DateTime _Bouwjaar;
		
		private int _EigenaarId;
		
		private EntityRef<Eigenaar> _Eigenaar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKentekenChanging(string value);
    partial void OnKentekenChanged();
    partial void OnPrijsChanging(decimal value);
    partial void OnPrijsChanged();
    partial void OnMerkChanging(string value);
    partial void OnMerkChanged();
    partial void OnBouwjaarChanging(System.DateTime value);
    partial void OnBouwjaarChanged();
    partial void OnEigenaarIdChanging(int value);
    partial void OnEigenaarIdChanged();
    #endregion
		
		public Auto()
		{
			this._Eigenaar = default(EntityRef<Eigenaar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kenteken", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Kenteken
		{
			get
			{
				return this._Kenteken;
			}
			set
			{
				if ((this._Kenteken != value))
				{
					this.OnKentekenChanging(value);
					this.SendPropertyChanging();
					this._Kenteken = value;
					this.SendPropertyChanged("Kenteken");
					this.OnKentekenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prijs", DbType="Decimal(7,2) NOT NULL")]
		public decimal Prijs
		{
			get
			{
				return this._Prijs;
			}
			set
			{
				if ((this._Prijs != value))
				{
					this.OnPrijsChanging(value);
					this.SendPropertyChanging();
					this._Prijs = value;
					this.SendPropertyChanged("Prijs");
					this.OnPrijsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merk", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Merk
		{
			get
			{
				return this._Merk;
			}
			set
			{
				if ((this._Merk != value))
				{
					this.OnMerkChanging(value);
					this.SendPropertyChanging();
					this._Merk = value;
					this.SendPropertyChanged("Merk");
					this.OnMerkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bouwjaar", DbType="DateTime NOT NULL")]
		public System.DateTime Bouwjaar
		{
			get
			{
				return this._Bouwjaar;
			}
			set
			{
				if ((this._Bouwjaar != value))
				{
					this.OnBouwjaarChanging(value);
					this.SendPropertyChanging();
					this._Bouwjaar = value;
					this.SendPropertyChanged("Bouwjaar");
					this.OnBouwjaarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EigenaarId", DbType="Int NOT NULL")]
		public int EigenaarId
		{
			get
			{
				return this._EigenaarId;
			}
			set
			{
				if ((this._EigenaarId != value))
				{
					if (this._Eigenaar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEigenaarIdChanging(value);
					this.SendPropertyChanging();
					this._EigenaarId = value;
					this.SendPropertyChanged("EigenaarId");
					this.OnEigenaarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Eigenaar_Auto", Storage="_Eigenaar", ThisKey="EigenaarId", OtherKey="Id", IsForeignKey=true)]
		public Eigenaar Eigenaar
		{
			get
			{
				return this._Eigenaar.Entity;
			}
			set
			{
				Eigenaar previousValue = this._Eigenaar.Entity;
				if (((previousValue != value) 
							|| (this._Eigenaar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Eigenaar.Entity = null;
						previousValue.Autos.Remove(this);
					}
					this._Eigenaar.Entity = value;
					if ((value != null))
					{
						value.Autos.Add(this);
						this._EigenaarId = value.Id;
					}
					else
					{
						this._EigenaarId = default(int);
					}
					this.SendPropertyChanged("Eigenaar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Eigenaar")]
	public partial class Eigenaar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naam;
		
		private EntitySet<Auto> _Autos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
		
		public Eigenaar()
		{
			this._Autos = new EntitySet<Auto>(new Action<Auto>(this.attach_Autos), new Action<Auto>(this.detach_Autos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Eigenaar_Auto", Storage="_Autos", ThisKey="Id", OtherKey="EigenaarId")]
		public EntitySet<Auto> Autos
		{
			get
			{
				return this._Autos;
			}
			set
			{
				this._Autos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Autos(Auto entity)
		{
			this.SendPropertyChanging();
			entity.Eigenaar = this;
		}
		
		private void detach_Autos(Auto entity)
		{
			this.SendPropertyChanging();
			entity.Eigenaar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gebruiker")]
	public partial class Gebruiker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naam;
		
		private bool _Admin;
		
		private string _Wachtwoord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnAdminChanging(bool value);
    partial void OnAdminChanged();
    partial void OnWachtwoordChanging(string value);
    partial void OnWachtwoordChanged();
    #endregion
		
		public Gebruiker()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin", DbType="Bit NOT NULL")]
		public bool Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wachtwoord", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Wachtwoord
		{
			get
			{
				return this._Wachtwoord;
			}
			set
			{
				if ((this._Wachtwoord != value))
				{
					this.OnWachtwoordChanging(value);
					this.SendPropertyChanging();
					this._Wachtwoord = value;
					this.SendPropertyChanged("Wachtwoord");
					this.OnWachtwoordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
